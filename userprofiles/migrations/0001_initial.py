# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-22 13:19
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=15, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.PositiveSmallIntegerField(null=True)),
                ('photo', models.ImageField(upload_to='avatars')),
                ('email', models.EmailField(max_length=254)),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('sex', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], default=False, max_length=12, verbose_name='Sexo')),
                ('is_player', models.BooleanField(default=False)),
                ('position', multiselectfield.db.fields.MultiSelectField(choices=[('GOALKEEPER', 'Portero - PT'), ('DEFENDER', 'Defensa Central - DFC'), ('RIGHT_DEFENDER', 'Defensa Lateral Derecho - LD'), ('LEFT_DEFENDER', 'Defensa Lateral Izquierdo- LI'), ('MIDFIELDER_FORWARD', 'Media Punta (por el centro adelantado) - MP'), ('MIDFIELDER_CENTER', 'Medio Centro (en el centro) - MC'), ('MIDFIELDER_DEFENSIVE', 'Medio Campo Defensivo - MCD'), ('MIDFIELDER_LEFT', 'Medio Izquierda - MI'), ('MIDFIELDER_RIGHT', 'Medio Derecha - MD'), ('FORWARD_CENTER', 'Delantero Centro (siempre pendientes de meter goles) - DC'), ('FORWARD_RIGHT', 'Extremo Derecho (los m√°s adelantados por la banda) - ED'), ('FORWARD_LEFT', 'Extremo Izquierdo  - EI'), ('SECOND_FORWARD', 'Segundo Delantero - SD')], max_length=255)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('height', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('nickname', models.CharField(blank=True, max_length=64)),
                ('number_matches', models.PositiveIntegerField(null=True)),
                ('accomplished_matches', models.PositiveIntegerField(null=True)),
                ('time_available', models.CharField(blank=True, max_length=255)),
                ('leg_profile', models.CharField(blank=True, max_length=64)),
                ('number_shirt_preferred', models.CharField(blank=True, max_length=255)),
                ('team_support', models.CharField(blank=True, max_length=255)),
                ('player_preferred', models.CharField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
