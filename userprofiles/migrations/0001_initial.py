# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-26 18:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import userprofiles.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=25, verbose_name='Nombre de usuario')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombres')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellidos')),
                ('birth_date', models.DateField(blank=True, help_text='Por favor use el siguiente formato: <em>DD/MM/YYYY</em>.', null=True, verbose_name='Fecha de nacimiento')),
                ('address', models.CharField(blank=True, max_length=150, verbose_name='Dirección de residencia')),
                ('phone', models.CharField(blank=True, max_length=25, verbose_name='Número de contacto')),
                ('occupation', models.CharField(blank=True, max_length=150, verbose_name='Ocupación')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='Imágen de perfil')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Edad')),
                ('sex', models.CharField(choices=[('Femenino', 'Femenino'), ('Masculino', 'Masculino')], default=False, max_length=12, verbose_name='Sexo')),
                ('country_of_birth', models.CharField(choices=[('COL', 'Colombia'), ('BRA', 'Brasil')], max_length=4, verbose_name='País de nacimiento')),
                ('is_administrative', models.BooleanField(default=False, help_text='Usuario con perfil administrativo', verbose_name='Administrativo')),
                ('is_student', models.BooleanField(default=False, help_text='Usuario con perfil de estudiante', verbose_name='Estudiante')),
                ('is_professor', models.BooleanField(default=False, help_text='Usuario con perfil de docente', verbose_name='Docente')),
                ('is_staff', models.BooleanField(default=True, help_text='Indica si el usuario puede entrar en este sitio de administración.', verbose_name='Usuario parte del equipo (staff)')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el usuario debe ser tratado como activo. Desmarque esta opción en lugar de borrar la cuenta.', verbose_name='Usuario activo en el sistema')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de vinculación al sistema')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'verbose_name_plural': 'Usuarios en el sistema de información',
            },
            managers=[
                ('objects', userprofiles.managers.UserManager()),
            ],
        ),
    ]
